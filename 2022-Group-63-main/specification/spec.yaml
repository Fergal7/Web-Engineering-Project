openapi: '3.0.3'
info:
  title: Web Engineering Spotify tracks API
  version: '1.0'
  description: |
    This is the specification for the web engineering project of group 63.

servers:
  - url: http://localhost:8000
    description: Backend hosted on port 8000

components:
  schemas:
    Song:
      type: object
      required:
        - "id"
      properties:
        id:
          type: string
          readOnly: true
        name:
          type: string
        popularity:
          type: integer
        duration_ms:
          type: integer
        artists:
          type: array
          items:
            $ref: "#/components/schemas/ArtistSummary"
        release_date:
          type: string
    
    SongSummary:
      type: object
      required:
        - "id"
      properties:
        id:
          type: string
          readOnly: true
        name:
          type: string
        popularity: 
          type: integer
        release_date: 
          type: string
    
    Artist:
      type: object
      required:
        - "id"
      properties:
        id:
          type: string
          readOnly: true
        name:
          type: string
        songs: 
          type: array
          items:
            $ref: "#/components/schemas/SongSummary"
        summary:
          type: object
          properties:
            number_of_songs:
              type: integer
            earliest_release: 
              type: object
              items: 
              $ref: "#/components/schemas/SongSummary"
            latest_release:
              type: object
              items: 
              $ref: "#/components/schemas/SongSummary"
            most_popular_song: 
              type: object
              items: 
              $ref: "#/components/schemas/SongSummary"

    ArtistSummary:
      type: object
      required:
        - "id"
      properties:
        id:
          type: string
          readOnly: true
        name:
          type: string

  responses:
    BadRequest:
      description: Request was not well-formed, see error details
      content:
        application/json:
          schema:
            type: object
            properties:
              error-message:
                type: string
                description: Error message detailing the problem with the request
        text/csv:
          schema:
            type: object
            properties:
              error-message:
                type: string
                description: Error message detailing the problem with the request

    NotFound:
      description: Resource not found

    NoResults:
      description: List empty; no results

    ServerError:
      description: Server error; no results, try again later

  parameters:
    order-by-popularity:
      name: N
      in: query
      required: true
      description: Return top N items by popularity
      schema:
        type: integer

    filter-year:
      name: year
      in: query
      required: true
      description: Filtering result by year
      schema:
        type: string

    content:
      name: type
      in: query
      required: false
      description: Type of content to be returned
      schema:
        type: string
        enum:
        - json 
        - csv 
        default: json
      
paths:
  /songs/id/{id}:
    parameters:
      - name: id
        in: path
        required: true
        description: The id of the song
        schema:
          type: string
      - $ref: "#/components/parameters/content"

    get:
      tags:
        - Songs
      summary: Retrieve a selected song
      description: Retrieves the song with the given id
      responses:
        '200':
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Song"
            text/csv:
              schema:
                $ref: "#/components/schemas/Song"

        '400':
          $ref: '#/components/responses/BadRequest'

        '404':
          $ref:  "#/components/responses/NotFound"

        '5XX':
          $ref: '#/components/responses/ServerError'
    
    put:
      tags:
        - Songs
      summary: Update a song
      description: Updates the song with the given id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Song"
      responses:
        '200':
          description: "Song updated, returns the new state"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Song"
            text/csv:
              schema:
                $ref: "#/components/schemas/Song"

        '400':
          $ref: '#/components/responses/BadRequest'

        '404':
          $ref: "#/components/responses/NotFound"

        '5XX':
          $ref: '#/components/responses/ServerError'

    delete:
      tags:
        - Songs
      summary: Delete a song
      description: Deletes the song with the given id
      responses:
        '204':
          description: Song deleted successfully

        '400':
          $ref: '#/components/responses/BadRequest'

        '404':
          $ref: "#/components/responses/NotFound"

        '5XX':
          $ref: '#/components/responses/ServerError'

  /songs:
    post:
      tags:
        - Songs
      summary: Creates a song
      description: Creates a new song with the given information
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Song"
          text/csv:
            schema:
              $ref: "#/components/schemas/Song"
      responses:
        '201':
          description: Song successfully created
          content:
            application/json:
              schema:
                type: string
                description: ID of newly created song
            text/csv:
              schema:
                type: string
                description: ID of newly created song
          headers:
            Location:
              schema:
                type: string
              description: The URL of the newly-created song

        '400':
          $ref: '#/components/responses/BadRequest'

        '404':
          $ref: "#/components/responses/NotFound"

        '5XX':
          $ref: '#/components/responses/ServerError'
       
    get:
      tags:
       - Songs
      description: Retrieves a list of songs by popularity
      summary: Retrieves a list of the top N songs in batches of M
      parameters:
        - $ref: "#/components/parameters/order-by-popularity"
        - $ref: "#/components/parameters/filter-year"
        - $ref: "#/components/parameters/content"

      responses:
        '200':
          description: ""
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Song"
            text/csv:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Song"

        '204':
          $ref: "#/components/responses/NoResults"

        '400':
          $ref: '#/components/responses/BadRequest'

        '5XX':
          $ref: '#/components/responses/ServerError'

  /songs/name/{name}:
    parameters:
      - name: name
        in: path
        required: true
        description: The name of the song 
        schema:
          type: string
      - $ref: "#/components/parameters/content"
          
    get:
      tags:
       - Songs
      description: Retrieves a list of songs 
      summary: Retrieves a list of songs by given name
    
      responses:
        '200':
          description: ""
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Song"
            text/csv:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Song"

        '204':
          $ref: "#/components/responses/NoResults"

        '400':
          $ref: '#/components/responses/BadRequest'

        '5XX':
          $ref: '#/components/responses/ServerError'

  /artists/songs/id/{id}:
    parameters:
      - name: id
        in: path
        required: true
        description: The id of the artist
        schema:
          type: string
      - $ref: "#/components/parameters/content"
      
    get:
      tags:
      - Artists 
      summary: Retrieves a list of songs featuring a selected artist
      description: Retrieves all songs featuring the artist with the given id

      responses:
        '200':
          description: ""
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/SongSummary"
            text/csv:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/SongSummary"
        '204':
          $ref: "#/components/responses/NoResults"

        '400':
          $ref: '#/components/responses/BadRequest'

        '404':
          $ref:  "#/components/responses/NotFound"

        '5XX':
          $ref: '#/components/responses/ServerError'

    delete:
      tags:
      - Artists 
      summary: Deletes a list of songs featuring a selected artist
      description: Deletes all songs featuring the artist with the given id or name

      responses:
        '204':
          description: Songs deleted successfully
      
        '400':
          $ref: '#/components/responses/BadRequest'

        '404':
          $ref:  "#/components/responses/NotFound"

        '5XX':
          $ref: '#/components/responses/ServerError'

  /artists/songs/name/{name}:
    parameters:
      - name: name
        in: path
        required: true
        description: The name of the artist
        schema:
          type: string
      - $ref: "#/components/parameters/content"

    get:
      tags:
      - Artists 
      summary: Retrieves a list of songs featuring a selected artist
      description: Retrieves all songs featuring the artist with the given name

      responses:
        '200':
          description: ""
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/SongSummary"
            text/csv:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/SongSummary"
        '204':
          $ref: "#/components/responses/NoResults"

        '400':
          $ref: '#/components/responses/BadRequest'

        '404':
          $ref:  "#/components/responses/NotFound"

        '5XX':
          $ref: '#/components/responses/ServerError'

    delete:
      tags:
      - Artists 
      summary: Deletes a list of songs featuring a selected artist
      description: Deletes all songs featuring the artist with the given id or name

      responses:
        '204':
          description: Songs deleted successfully
      
        '400':
          $ref: '#/components/responses/BadRequest'

        '404':
          $ref:  "#/components/responses/NotFound"

        '5XX':
          $ref: '#/components/responses/ServerError'

  /artists/summary/id/{id}:
    parameters:
      - name: id
        in: path
        required: true
        description: The id of the artist
        schema:
          type: string
      - $ref: "#/components/parameters/content"

    get:
      tags:
      - Artists 
      summary: Retrieves summary information on the artist
      description: Retrieves summary information on the artist with the given id or name

      responses:
        '200':
          description: ""
          content:
            application/json:
              schema:
                  $ref: "#/components/schemas/Artist/properties/summary"
            text/csv:
              schema:
                  $ref: "#/components/schemas/Artist/properties/summary"
        '204':
          $ref: "#/components/responses/NoResults"

        '400':
          $ref: '#/components/responses/BadRequest'

        '404':
          $ref:  "#/components/responses/NotFound"

        '5XX':
          $ref: '#/components/responses/ServerError'

  /artists/summary/name/{name}:
    parameters:
      - name: name
        in: path
        required: true
        description: The name of the artist
        schema:
          type: string
      - $ref: "#/components/parameters/content"

    get:
      tags:
      - Artists 
      summary: Retrieves summary information on the artist
      description: Retrieves summary information on the artist with the given id or name

      responses:
        '200':
          description: ""
          content:
            application/json:
              schema:
                  $ref: "#/components/schemas/Artist/properties/summary"
            text/csv:
              schema:
                  $ref: "#/components/schemas/Artist/properties/summary"
        '204':
          $ref: "#/components/responses/NoResults"

        '400':
          $ref: '#/components/responses/BadRequest'

        '404':
          $ref:  "#/components/responses/NotFound"

        '5XX':
          $ref: '#/components/responses/ServerError'
  
  /artists:
    get:
      tags:
       - Artists
      description: Retrieves a list of artists by popularity
      summary: Retrieves a list of the top N artists in batches of M
      parameters:
        - $ref: "#/components/parameters/order-by-popularity"
        - $ref: "#/components/parameters/filter-year"
        - $ref: "#/components/parameters/content"

      responses:
        '200':
          description: ""
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Artist"
            text/csv:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Artist"

        '204':
          $ref: "#/components/responses/NoResults"

        '400':
          $ref: '#/components/responses/BadRequest'

        '5XX':
          $ref: '#/components/responses/ServerError'